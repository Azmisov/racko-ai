/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reinforcement;
import interfaces.*;
import racko.Game;
import client.*;
import java.util.Random;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class PlayerExploiter extends Player{
	private ReinforcementLearner rl;
	private double score;
	
	public PlayerExploiter()
	{
		super();
		boolean accept = false;
		while (!accept)
		{
			PlayerExplorer PE = new PlayerExplorer();
			PE.train();
			rl = PE.getRL();

			Player[] players = new Player[]{this, new PlayerRandom()};
			Game g = Game.create(players, 5, 1, false);
			int play_games = 4000;
			int epoch_every = 2000;
			int epochs = 0;
			for (int i = 0; i < play_games; i++){
				Random rand = new Random();
				g.play(rand.nextInt(players.length));
				if (i > 0 && i % epoch_every == 0){
					epochs++;
					//Notify players of epoch
					for (Player p: players)
						p.epoch();

					if (EPOCH_wins > 0.7)
					{
						accept = true;
						score = EPOCH_wins;
					}
					else
						System.out.println("Reinforcement Learner Rejected score of " + EPOCH_wins);
				}
			}
		}
		save();
	}
	
	@Override
	public int play()
	{
		boolean fromDiscard = rl.fromDiscardForReal(this);
		int card = game.deck.draw(fromDiscard);
		int pos = rl.cardPositionForReal(this, card);
		return pos == game.rack_size ? card : rack.swap(card, pos, fromDiscard);
	}
	
	@Override
	public void scoreRound(boolean won, int score)
	{
		super.scoreRound(won, score);
		rl.gameEnd(won);
	}
	
	public void save()
	{
		FileWriter writer = null;
		try {
			Random rand = new Random();
			String fileName = "aReinforcementLearner" + rand.nextInt() + ".txt";
			writer = new FileWriter(fileName);
			String toWrite = "" + score + "\n";
			toWrite = toWrite + rl.saveString();
			writer.write(toWrite);
		} catch (IOException ex) {
			Logger.getLogger(PlayerExploiter.class.getName()).log(Level.SEVERE, null, ex);
		} finally {
			try {
				writer.close();
			} catch (IOException ex) {
				Logger.getLogger(PlayerExploiter.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
	}
}
